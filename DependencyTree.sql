OBJECT DEPENDENCY TREE

-- Blog showing all dependencies
-- http://developer.teradata.com/blog/ulrich/2011/11/extract-and-analyse-database-object-dependencies
-- Looking to myTable1 dependencies. There are two steps: 
--     1. CREATE VOLATILE TABLE OBJ_DEPENDENCY 
--     2. WITH RECURSIVE DEPENDENT

SELECT TOP 10 *  from dbc.TextTbl
FROM myTable1


SELECT D.DatabaseName,TVMName,TableKind AS "Type"
FROM dbc.TVM T,dbc.dbase D
WHERE D.DatabaseId=T.DatabaseId
 AND CreateText LIKE '%"myDATABASE"."myTable1"%' (NOT CS)
 AND D.DatabaseName ='myDATABASE'
UNION
SELECT DatabaseName,TVMName,TableKind AS "Type"
FROM dbc.TextTbl X,dbc.dbase D,dbc.TVM T
WHERE X.TextType='C'  --not sure what this is
 AND X.TextString LIKE  '%"myDATABASE"."myTable1"%' (NOT CS)
 AND X.DatabaseId=D.DatabaseId
 AND X.TextId=T.TVMId
MINUS
SELECT DatabaseName,TVMName,TableKind
FROM dbc.TVM T,dbc.dbase D
WHERE D.DatabaseId=T.DatabaseId
 AND DatabaseName='myDATABASE'
 AND TVMName='myTable1'
ORDER BY 1,2;


------------------------------------------------------------------
CREATE VOLATILE TABLE OBJ_DEPENDENCY 
AS
(
SELECT CAST(TA.DATABASENAME AS VARCHAR(30)) AS SOURCE_DB, 
       CAST(TA.TABLENAME AS VARCHAR(30)) AS SOURCE_OBJ, 
       TA.TABLEKIND AS SOURCE_OBJ_KIND, 
       D.DATABASENAME AS TARGET_DB,
       T.TVMNAME AS TARGET_OBJ,
       T.TABLEKIND AS TARGET_OBJ_KIND 
FROM   DBC.TVM T,
       DBC.DBASE D , 
       DBC.TABLES TA
WHERE D.DATABASEID = T.DATABASEID 
      AND T.CREATETEXT LIKE '%"' !! TRIM (TA.DATABASENAME) !! '"."'!! TRIM (TA.TABLENAME)!! '"%' (NOT CS) 
      AND D.DATABASENAME='myDATABASE'
      AND TA.DATABASENAME='myDATABASE'
UNION
SELECT TA.DATABASENAME AS SOURCE_DB, 
       TA.TABLENAME AS SOURCE_OBJ, 
       TA.TABLEKIND AS SOURCE_OBJ_KIND, 
       D.DATABASENAME AS TARGET_DB,
       T.TVMNAME AS TARGET_OBJ,
       T.TABLEKIND AS TARGET_OBJ_KIND
FROM   DBC.TEXTTBL X,
       DBC.DBASE D,
       DBC.TVM T,
       DBC.TABLES TA
WHERE X.TEXTTYPE='C'
      AND X.TEXTSTRING LIKE '%"' !! TRIM (TA.DATABASENAME) !! '"."'!! TRIM (TA.TABLENAME)!! '"%' (NOT CS) 
      AND X.DATABASEID=D.DATABASEID 
      AND X.TEXTID=T.TVMID 
      AND D.DATABASENAME='myDATABASE'
      AND TA.DATABASENAME='myDATABASE'
MINUS
SELECT TA.DATABASENAME AS SOURCE_DB, 
       TA.TABLENAME AS SOURCE_OBJ, 
       TA.TABLEKIND AS SOURCE_OBJ_KIND, 
       D.DATABASENAME AS TARGET_DB,
       T.TVMNAME AS TARGET_OBJ,
       T.TABLEKIND AS TARGET_OBJ_KIND 
FROM   DBC.TVM T,
       DBC.DBASE D,
       DBC.TABLES TA 
WHERE D.DATABASEID=T.DATABASEID 
      AND D.DATABASENAME= TA.DATABASENAME
      AND T.TVMNAME= TA.TABLENAME
      AND D.DATABASENAME='myDATABASE'
      AND TA.DATABASENAME='myDATABASE'
     
      
) WITH DATA
PRIMARY INDEX (SOURCE_DB,SOURCE_OBJ)
ON COMMIT PRESERVE ROWS;


---
select * FROM OBJ_DEPENDENCY
where SOURCE_OBJ='myTable1'

select top 20 TVMNAME from DBC.TVM 

------------------------------------------------------------------
WITH RECURSIVE DEPENDENT
( SOURCE_DB,
  SOURCE_OBJ,
  SOURCE_OBJ_KIND,
  DEPENDENT_DB,
  DEPENDENT_OBJ,
  DEPENDENT_OBJ_KIND,
  DEPENDENCY_LEVEL 
) 
AS
(
SELECT SOURCE_DB,
       SOURCE_OBJ,
       SOURCE_OBJ_KIND,
       TARGET_DB AS DEPENDENT_DB,
       TARGET_OBJ AS DEPENDENT_OBJ,
       TARGET_OBJ_KIND AS DEPENDENT_OBJ_KIND,
       CAST(1 AS SMALLINT) AS DEPENDENCY_LEVEL  
FROM OBJ_DEPENDENCY 
UNION ALL
SELECT D.SOURCE_DB,
       D.SOURCE_OBJ,
       D.SOURCE_OBJ_KIND,
       O.TARGET_DB AS DEPENDENT_DB, 
       O.TARGET_OBJ AS DEPENDENT_OBJ,
       O.TARGET_OBJ_KIND AS DEPENDENT_OBJ_KIND,
       D.DEPENDENCY_LEVEL + 1 AS DEPENDENCY_LEVEL
FROM OBJ_DEPENDENCY O
     JOIN
     DEPENDENT D
        ON O.SOURCE_DB = D.DEPENDENT_DB
           AND O.SOURCE_OBJ = D.DEPENDENT_OBJ
           AND D.DEPENDENCY_LEVEL <= 100
)
SELECT 
  DEPENDENT_OBJ,
  DEPENDENT_OBJ_KIND,
  DEPENDENCY_LEVEL  
FROM DEPENDENT
--------
where SOURCE_OBJ='myTable1'
--------
ORDER BY 
    DEPENDENCY_LEVEL,
    DEPENDENT_OBJ;
         
-----------------------------------------------------

